on:
  # push:
  #   branches:
  #     - "aka/gha-griffin-prs"
  workflow_dispatch:
    inputs:
      name:
        description: "Study name"
        required: true
        type: string
      enable_feature:
        description: "Feature name to enable"
        required: true
        type: string
      probability_enabled:
        description: "Percentage number to enable. ex: 25"
        required: true
        default: "25"
        type: string
      channel:
        description: "Channels to enable on, in comma separated value format"
        required: true
        default: "Release,Beta,Nightly"
        type: string
      platform:
        description: "Platforms to enable on, in comma separated value format"
        required: true
        default: "Windows,Mac,Linux,Android"
        type: string
      min_version:
        description: "Minimum version to enable on [Optional]"
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  upsert-study:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: upsert-study
        run: |
          set -ex
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name "${{ github.actor }}"
          git config push.default simple

          # base_branch=$(git branch --show-current)
          function upsert_study {
            branch_name=pr-"${1}"-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}
            git switch "${1}"
            git switch -c "${branch_name}"
            git merge aka/gha-griffin-prs  # TODO Disable before merge!
            .github/ci/griffin-study-utils.py upsert_study ${{ inputs.name }} ${{ inputs.enable_feature }} ${{ inputs.probability_enabled }} ${{ inputs.channel }} ${{ inputs.platform }} ${{ inputs.min_version }}
            git add seed/seed.json
            git commit -m "Added study ${{ inputs.name }}"
            git push -u origin "${branch_name}"
            git branch # DEBUG
            gh pr create --base "${1}" -d -f -t "Study ${{ inputs.name }}"
          }

          function get_pr_number {
            pr_number=$(gh pr view --json number --jq '.number')
          }

          pr_number=0
          upsert_study main
          get_pr_number
          git branch
          pr_main_number=${pr_number:?}
          echo "PR NUM: " ${pr_main_number}
